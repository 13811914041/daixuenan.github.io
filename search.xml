<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[摘要]]></title>
    <url>%2Fdaixuenan.github.io%2F2018%2F08%2F14%2Fbeign%2Fabstract%2F</url>
    <content type="text"><![CDATA[原创地址 https://13811914041.github.io/daixuenan.github.io/安卓开发工作也已经几年了，期间想过要建立一个自己的blog，只是一直不知道该写什么。现在想想，既然不知道写什么，那就把自己这些年的积累写下来吧，以梳理过的结构，回顾一下自己从零开始学习安卓至今的历程。想学安卓的小伙伴们也欢迎来这边交流，也欢迎老司机及时指出不正之处。 安卓环境搭建windows]]></content>
  </entry>
  <entry>
    <title><![CDATA[安卓环境搭建（Windows）]]></title>
    <url>%2Fdaixuenan.github.io%2F2018%2F08%2F14%2Fbeign%2Fenvironment%2F</url>
    <content type="text"><![CDATA[原创地址 https://13811914041.github.io/daixuenan.github.io/JDK下载没有JDK环境的话需要下载安装。注意勾选接受条款，并选择对应的版本，我机器是windows 64位。如下图： Android SDK下载Android SDK在安装Android Studio时会提示安装，但是我比较习惯全部自己来，也是受到当初ecplise的安装习惯影响。 Android Studio下载Android Studio是目前主要的安卓开发软件，ecplise我也已经很少用了。JDK和Android SDK在Android Studio安装的时候会提示自动安装，但是我觉得不太好管理，所以全部手动安装了。 以上软件基本都是下载最新版。如下图： 然后，开始搭建环境JDK安装Android SDK和Android Studio安装没什么好说的，一路安装即可。安装完成后打开Android Studio，如下图： 如果SDK没有设置成功，可通过config-&gt;SDK，点击edit配置SDK路径，如下图： 至此，安装工作完成，接下来可以创建hello world了，比较简单。如下图：点击Start a new Android Studio project 按照提示输入项目名称、域名，选择项目目录 选择手机平板开发即可，点击next 选择Empty Activity，点击next 点击finish,即可完成一个项目的创建 项目创建成功 接下来就可以运行项目在手机上了 模拟器调试真机调试]]></content>
  </entry>
  <entry>
    <title><![CDATA[JDK安装（Windows）]]></title>
    <url>%2Fdaixuenan.github.io%2F2018%2F08%2F14%2Fbeign%2Fjdk_install%2F</url>
    <content type="text"><![CDATA[原创地址 https://13811914041.github.io/daixuenan.github.io/JDK安装下载的JDK安装包包含jdk和jre两个安装包（我们主要需要jdk，jre算是附带品，开发基本不会用到），所以，我们安装的时候一般建立一个java目录，在java目录下建立jdk和jre两个子目录，分别存放jdk和jre安装文件。如下图： 双击打开安装步骤，注意选择jdk文件夹，如下图： 安装完jdk就是jre,与jdk一样的步骤。找到jdk安装目录复制bin目录路径，并复制到粘贴板上(CTRL + C)，如下图： 安装完成后找到我的电脑图标右键-&gt;属性-&gt;高级系统设置-&gt;环境变量，结果如下图： 双击系统变量下的Path，接下来win7 win8 win10系统界面不太一样，我是win10系统，不一样的页面在弹出框后面加上‘;’，再粘贴复制的路径(CTRL + V)，win10页面如下图： 在空处粘贴即可。 至此，JDK就安装完成了。可以检测一下JDK环境配置。win + R，弹出框输入cmd打开dos窗口，分别输入java -version、javac -version，查看版本号成功，即环境搭建成功，如下图：]]></content>
  </entry>
  <entry>
    <title><![CDATA[真机调试]]></title>
    <url>%2Fdaixuenan.github.io%2F2018%2F08%2F14%2Fbeign%2Fphone_debug%2F</url>
    <content type="text"><![CDATA[原创地址 https://13811914041.github.io/daixuenan.github.io/真机调试通常把手机插上数据线，连接到电脑上，点击debug调试，弹出框就会显示设备，选择设备即可安装安卓软件。在这里，我假设是新手机第一次调试。这样的话我们需要进行以下几个步骤： * 激活开发者模式* 打开USB调试* 连接调试设备激活开发者模式以我的手机，小米MIX2为例。现在的新手机通常刚到手是看不见开发者选项的，需要去激活开发者选项。激活流程为设置-&gt;我的设备-&gt;全部参数，然后一直连点 MIUI 版本处直到打开开发者模式为止。然后设置-&gt;更多设置，开发者选项就出现了。不同的手机激活位置不一样，大体思路都是进入手机信息，尝试连点各个版本信息往往就可以找到激活开发者选项的地方。如下图： 打开USB调试打开开发者选项，打开USB调试选项，一些手机还需要打开USB安装选项（如果有的话就需要打开，且需要安装sim卡才可以打开） 连接调试设备打开项目，点击debug调试按钮 选择调试设备，点击OK 手机安装成功 到这里，就可以修改代码，调试项目了。 模拟器调试开启安卓之旅]]></content>
  </entry>
  <entry>
    <title><![CDATA[模拟器调试]]></title>
    <url>%2Fdaixuenan.github.io%2F2018%2F08%2F14%2Fbeign%2Fvirtual_debug%2F</url>
    <content type="text"><![CDATA[原创地址 https://13811914041.github.io/daixuenan.github.io/通常调试Android代码的时候，我们一般习惯用真机调试，因为真机功能全，而且速度相对快一些。但是有时候没有真机的环境下，就需要模拟器来调试代码。Android Studio有自带的虚拟机，可根据自己需求的选择API版本。除了安卓自带的模拟器，还有第三方模拟器，功能强大且性能优秀，如逍遥模拟器、夜神模拟器、腾讯的模拟器。第三方的模拟器主要是用来玩的，由于其性能的优越性，拿来调试项目也是不错的选择。 在这里，我只重点介绍第三方模拟器调试。因为第三方模拟器搭建起来比较方便，速度快；Android Studio自带的模拟器还是很慢的，不太适合实际开发调试。下面以逍遥模拟器为例：逍遥模拟器调试逍遥模拟器下载下载安装方法不多做介绍，和普通软件安装流程一样。注意选择个人版即可。下载完成后双击图标打开模拟器，第一次打开需要初始化，比较慢。 里面会推荐很多游戏，要禁得住诱惑。 此时已经可以调试了。打开项目，点击debug调试按钮 选择调试的设备，点击OK即可开始安装，需等待，可依据底部状态条状态。如果没有设备，将模拟器关掉重新打开即可。 至此，就可以修改代码调试APP了。 安卓自带模拟器调试如下图： 然后点击Create Virtual Device，选择设备类型及型号（默认即可），next， 选择模拟器API版本，可选择一个点击download，等待下载安装完成后选中并点击next。我下载的是API 25，7.1.1版本。 输入虚拟机名称，选择横竖屏。通常手机是竖屏，平板是横屏。一般情况我们选默认的竖屏就好。点击finish即可完成虚拟机创建。 点击启动按钮开启虚拟机，等待虚拟机启动成功后，即可调试。（这个虚拟机我没有成功打开） 真机调试开启安卓之旅]]></content>
  </entry>
  <entry>
    <title><![CDATA[TextView文本控件的使用]]></title>
    <url>%2Fdaixuenan.github.io%2F2018%2F08%2F14%2Fwidget%2FView%2F</url>
    <content type="text"><![CDATA[原创地址 https://13811914041.github.io/daixuenan.github.io/TextView是安卓开发常用的控件，其作用是展示文本内容。可以根据需求，展示丰富的视觉效果。首先，打开Android Studio，找到activity_main.xml文件并双击打开。 可以看到，新创建的项目里，已经在activity_main.xml里面已经写了TextView。 activity_main.xml1234567&lt;TextView android:id="@+id/tv_text" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="我是一个文本" android:textColor="#00ff00" android:textSize="24sp" /&gt; 通过上段代码，就可以编辑出一个有文本内容，有id，宽高，颜色，文字大小设置好的TextView。运行，即可看见效果。 id通常我们为一个控件设置id,可以在上下文引用。同时在java代码中我们也通过id来获取一个控件设置它的属性。 layout_width layout_height控件的宽高。通常我们会用wrap_content、match_parent、fill_parent以及dp单位的数值设置它的属性，dp单位的数值比如30dp这样表示。wrap_content是自适应，match_parent和fill_parent是填充，但还是有有区别的，这个后面再说。 text虽然只是个文本属性，但还是要说的。通常规范写法不会直接将文本写在这里，而是将文本配置到res-&gt;values-&gt;strings.xml中引用。 strings.xml1&lt;string name="this_is_a_text"&gt;这是一个文本&lt;/string&gt; 在resources标签内依照格式添加上面的代码。name命名小写，单词以下划线相连。 TextView属性设置1android:text="@string/this_is_a_text" textColor文本颜色也需要配置好以后再引用，位置在res-&gt;values-&gt;colors.xml。 colors.xml1&lt;color name="text_color"&gt;#999999&lt;/color&gt; TextView属性设置1android:textColor="@color/text_color" textSize文字大小我们通常用sp单位，与dp单位的区别是，sp单位的文字大小可根据系统设置改变。文字大小属性包括一些常用的dp单位值一般都存在dimens.xml文件里。 找到values文件夹，右键-&gt;new-&gt;XML-&gt;Values XML File，在弹出框输入dimens，.xml后缀会自动生成。 dimens.xml123&lt;resources&gt; &lt;dimen name="text_size_15"&gt;15sp&lt;/dimen&gt;&lt;/resources&gt; TextView属性设置1android:textSize="@dimen/text_size_15" 这些都是基本属性，看起来也不是很多。其实TextView的属性是很多的，在这里介绍的这些属性对于初学者尝尝鲜就足够了。其他的属性为什么没介绍，是因为我想通过另一个控件来说：View。]]></content>
  </entry>
  <entry>
    <title><![CDATA[TextView文本控件的使用]]></title>
    <url>%2Fdaixuenan.github.io%2F2018%2F08%2F14%2Fwidget%2FTextView%2F</url>
    <content type="text"><![CDATA[原创地址 https://13811914041.github.io/daixuenan.github.io/TextView是安卓开发常用的控件，其作用是展示文本内容。可以根据需求，展示丰富的视觉效果。首先，打开Android Studio，找到activity_main.xml文件并双击打开。 可以看到，新创建的项目里，已经在activity_main.xml里面已经写了TextView。 activity_main.xml1234567&lt;TextView android:id="@+id/tv_text" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="我是一个文本" android:textColor="#00ff00" android:textSize="24sp" /&gt; 通过上段代码，就可以编辑出一个有文本内容，有id，宽高，颜色，文字大小设置好的TextView。运行，即可看见效果。 id通常我们为一个控件设置id,可以在上下文引用。同时在java代码中我们也通过id来获取一个控件设置它的属性。 layout_width layout_height控件的宽高。通常我们会用wrap_content、match_parent、fill_parent以及dp单位的数值设置它的属性，dp单位的数值比如30dp这样表示。wrap_content是自适应，match_parent和fill_parent是填充，但还是有有区别的，这个后面再说。 text虽然只是个文本属性，但还是要说的。通常规范写法不会直接将文本写在这里，而是将文本配置到res-&gt;values-&gt;strings.xml中引用。 strings.xml1&lt;string name="this_is_a_text"&gt;这是一个文本&lt;/string&gt; 在resources标签内依照格式添加上面的代码。name命名小写，单词以下划线相连。 TextView属性设置1android:text="@string/this_is_a_text" textColor文本颜色也需要配置好以后再引用，位置在res-&gt;values-&gt;colors.xml。 colors.xml1&lt;color name="text_color"&gt;#999999&lt;/color&gt; TextView属性设置1android:textColor="@color/text_color" textSize文字大小我们通常用sp单位，与dp单位的区别是，sp单位的文字大小可根据系统设置改变。文字大小属性包括一些常用的dp单位值一般都存在dimens.xml文件里。 找到values文件夹，右键-&gt;new-&gt;XML-&gt;Values XML File，在弹出框输入dimens，.xml后缀会自动生成。 dimens.xml123&lt;resources&gt; &lt;dimen name="text_size_15"&gt;15sp&lt;/dimen&gt;&lt;/resources&gt; TextView属性设置1android:textSize="@dimen/text_size_15" 这些都是基本属性，看起来也不是很多。其实TextView的属性是很多的，在这里介绍的这些属性对于初学者尝尝鲜就足够了。其他的属性为什么没介绍，是因为我想通过另一个控件来说：View。]]></content>
  </entry>
  <entry>
    <title><![CDATA[开启安卓之旅]]></title>
    <url>%2Fdaixuenan.github.io%2F2018%2F08%2F14%2Fstart%2Fstart_android%2F</url>
    <content type="text"><![CDATA[原创地址 https://13811914041.github.io/daixuenan.github.io/下面我们可以开始安卓开发了，不过在开始之前，我觉得有必要介绍一下安卓project的目录结构，让大家认清各个文件类型的作用，在写代码之前对安卓有个大体的了解。 安卓目录可以有多种表现形式，如下图： 常用的有project和android两种视图，project目录结构将项目所有文件都展示出来；Android目录结构是安卓项目特有的结构，只展示可编辑的项目文件目录。本人比较习惯Android目录结构，因为简洁，找文件方便。我也推荐使用Android目录结构，包括接下来的目录结构介绍也是根据Android结构来。project目录结构也可一一对应。 如上图所示，我们能看见app目录，app下有mainifest、java、res文件夹。library目录，下面还有Gradle Scripts及下面一群文件。library是moudle依赖库，结构与app基本一样，不过不适合现在就说，在后面会写。 app项目主目录。主要的业务逻辑都会在这里实现。 Gradle Scripts这个不是一个目录，而是Android目录结构将配置文件都提取出来统一放在这一层管理，这也是我喜欢Android视图结构的原因之一。 mainifest这个目录下有一个AndroidMainifest.xml文件，主要用来配置权限和一些Activity(可以理解为页面)，Service(应用后台服务)，以及一些其他应用的信息。 java这个目录存放需要实现的业务逻辑的代码 res这个是资源文件夹，里面存放项目的资源文件。 drawable 和 mipmap图片资源文件，目前我比较习惯drawable为主。二选一即可。 layout静态布局文件。Android的页面往往都是先实现layout文件下面的.xml静态布局文件，然后用java代码来控制布局文件的属性，以达到各式各样的交互效果。通常我们用Activity、Fragment来控制，有时候我们也会自定义控件、布局、对话框之类，可以调用静态布局文件。 valuesvalues文件夹下存放的都是一些设置好的值或者样式。colors里面可以设置颜色属性；strings可以配置可供全局使用的字符串；styles可以设置各种样式，包括主题风格到具体控件样式。 除此之外还有其他一些不可见的文件。attrs用来定义各控件布局的属性，且支持在静态layout布局配置；dimens定义全局的数值，包括长宽高、文字的大小；arrays顾名思义数组，将各类值归纳到一个数组中供全局调用。 以上文件均各自实现各自名称相应的功能，不过我也可以在strings.xml添加colors的全局配置，虽然有各自的名字，但是使用是很灵活的。不过我们一般统一规范，该在哪里写就在哪里写，这也是必须严格注意的。 build.gradle这个是项目的主要配置文件。一般新建的项目会有两个build.gradle文件，看后面的()内容，Project开头的是项目的全局配置文件，Module开头的是各自模块（module）的配置文件。如果后面添加了很多module依赖，则会出现相应的build.gradle配置文件。()内冒号后面是该Project/Module的名字。 以下是不需要关注太多的，知道就行gradle-wrapper.properties项目gradle的配置文件。通常Android Studio会自动配置好。除非出了问题，才需要处理。 proguard-rules.pro配置项目的混淆代码。目前有免费的线上加固包，挺方便的。 gradle.properties配置静态变量以供build.gradle调用。 local.properties通常自动生成，不用管。配置静态变量以供java代码调用。这里一般会有SDK路径配置，有NDK的话还会有NDK路径配置。 local.properties依赖的modules，自动生成，不用管。 另外还有一些其他目录libsapp目录同级目录。这个文件夹需要切换到project目录结构才能看见，里面存放库文件。若有.so库，则会有相对应的jniLibs文件生成（需要一些配置）。一般本地.jar包、本地.so文件、.arr包在这里添加。 assetsapp目录同级目录。也是存放资源文件为主，与res的区别是这里存放一些特殊的文件及一些较大文件。如txt文本、本地音视频等。较大的图片也可以存放在这里。 animres目录下的子目录。通常存放一些动画属性。 menures目录下的子目录。菜单的配置。较少用。通常都是自行在代码中实现。 关于这些目录结构下的文件的配置用法，后面会根据实例写到。接下来，就可以写代码了。TextView文本控件的使用]]></content>
  </entry>
</search>
